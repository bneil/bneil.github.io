<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Benjamin Neil</title><link>/tags/docker/</link><description>Recent content in docker on Benjamin Neil</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 01 Jun 2021 17:03:50 -0600</lastBuildDate><atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Connecting/Migrations in RDS</title><link>/post/note_connecting_to_rds/</link><pubDate>Tue, 01 Jun 2021 17:03:50 -0600</pubDate><guid>/post/note_connecting_to_rds/</guid><description>Goose Since goose uses pq under the hood, to hit remote urls
goose postgres &amp;#34;user=postgres password=${PROD_PGPASS} dbname=test sslmode=disable host=database.rds.amazonaws.com&amp;#34; status PSQL / RDS I didnt have a default database created, so I needed to psql into it - summoning psql via docker container
docker run -it --rm jbergknoff/postgresql-client postgresql://postgres:${PROD_PGPASS}@database.rds.amazonaws.com:5432</description></item><item><title>Nondistributable Artifacts</title><link>/post/docker-nondistributable-artifacts/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>/post/docker-nondistributable-artifacts/</guid><description>The Mystery I was reading through the docker documentation for docker registry and ran into this curious idea of nondistributable artifacts and how that related to some layers that are proprietary. Which got me thinking about how I could setup my own non distributable layers.
So looking into microsoft/windowsservercore I figured since those had some foreign layers I could take a gander at what was in the manifest which made particular layers &amp;ldquo;foreign&amp;rdquo;.</description></item></channel></rss>
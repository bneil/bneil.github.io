<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>coding on Benjamin Neil</title><link>/categories/coding/</link><description>Recent content in coding on Benjamin Neil</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 01 Jun 2021 17:03:50 -0600</lastBuildDate><atom:link href="/categories/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>Connecting/Migrations in RDS</title><link>/notes/note_connecting_to_rds/</link><pubDate>Tue, 01 Jun 2021 17:03:50 -0600</pubDate><guid>/notes/note_connecting_to_rds/</guid><description>Goose Since goose uses pq under the hood, to hit remote urls
goose postgres &amp;#34;user=postgres password=${PROD_PGPASS} dbname=test sslmode=disable host=database.rds.amazonaws.com&amp;#34; status PSQL / RDS I didnt have a default database created, so I needed to psql into it - summoning psql via docker container
docker run -it --rm jbergknoff/postgresql-client postgresql://postgres:${PROD_PGPASS}@database.rds.amazonaws.com:5432</description></item><item><title>Audit Service - RDS</title><link>/posts/2021-05-28_rds-audit-service/</link><pubDate>Fri, 28 May 2021 11:39:43 -0600</pubDate><guid>/posts/2021-05-28_rds-audit-service/</guid><description>Audit Service or Round 2 Fight Description When I started to think more critically about how interactions would work inside dynamodb for auditing I quickly learned about pain. Lots and lots of pain. Including the fact id probably end up having to use dynamodb streams and couple that with elasticsearch. So im not going to even entertain that idea and am going down the ol trusty sql route.
Creating the database Im still on an older version of terraform, so public shamming for being on 0.</description></item><item><title>Audit Service - Dynamodb</title><link>/posts/audit-dynamodb/</link><pubDate>Wed, 26 May 2021 11:13:53 -0600</pubDate><guid>/posts/audit-dynamodb/</guid><description>Audit Service Description Decided that I wanted an audit db and service to help keep track of user behaviors. Since I already have some in Redis, and some in Postgres I thought this might be a useful exercise. The main thing id like to accomplish with this code is going to be a way to track events and break them down by week/month/year per user and per company.
Im having some self debate about creating tables for the tallies or if I should just be creating them on the fly using a query.</description></item><item><title>Nextjs Crud :: Setup</title><link>/posts/2021-04-21-nextjs-crud/</link><pubDate>Wed, 21 Apr 2021 20:06:34 -0600</pubDate><guid>/posts/2021-04-21-nextjs-crud/</guid><description>Setup So the gist of the below is that we are creating a starter nextjs application, typescript, converting to yarn and finally installing both tailwind css and tailwind jit.
λ&amp;gt; npx create-next-app nextjs-crud --use-npm --example &amp;#34;https://github.com/vercel/next-learn-starter/tree/master/learn-starter&amp;#34; λ&amp;gt; cd nextjs-crud λ&amp;gt; touch tsconfig.json λ&amp;gt; npm install --save-dev typescript @types/react λ&amp;gt; rm -f package-lock.json λ&amp;gt; yarn add -d tailwindcss@latest postcss@latest autoprefixer@latest λ&amp;gt; npx tailwindcss init -p λ&amp;gt; yarn add @tailwindcss/jit tailwindcss postcss if you want to learn more about the &amp;lsquo;why&amp;rsquo; you should use the jit instead of using tailwind directly,</description></item><item><title>Migrating to Dynamo</title><link>/posts/2021-04-20-dynamo_struct/</link><pubDate>Tue, 20 Apr 2021 10:15:26 -0600</pubDate><guid>/posts/2021-04-20-dynamo_struct/</guid><description>Another store getting migrated Today&amp;rsquo;s pivotal tasks are all related towards moving things away from redis and into dynamo. So far ive gotten the underpinnings done by creating a dynamo store
The main struct looks like this
type DynamoStore struct { tableName string primaryKey string store *dynamodb.DynamoDB } The funny thing is that im basically treating dynamo in the same way I was treating redis. Which is as primarily a key value store.</description></item><item><title>WASM and Webmentions</title><link>/posts/wasm/</link><pubDate>Thu, 15 Apr 2021 15:36:52 -0600</pubDate><guid>/posts/wasm/</guid><description>Webmentions So as I journey through the fun webmentions, it looks like since im just using github pages, I would migrate over to using cloudflare so I could play more with webworkers. My last attempt was that Danny Devito Quote generator that I believe was working fairly well.
Although, having said that it really isnt at the point id like it to be. I originally wanted an &amp;ldquo;always sunny in philadelphia&amp;rdquo; to regale my coworkers with.</description></item><item><title>Nondistributable Artifacts</title><link>/posts/docker-nondistributable-artifacts/</link><pubDate>Sun, 08 Apr 2018 00:00:00 +0000</pubDate><guid>/posts/docker-nondistributable-artifacts/</guid><description>The Mystery I was reading through the docker documentation for docker registry and ran into this curious idea of nondistributable artifacts and how that related to some layers that are proprietary. Which got me thinking about how I could setup my own non distributable layers.
So looking into microsoft/windowsservercore I figured since those had some foreign layers I could take a gander at what was in the manifest which made particular layers &amp;ldquo;foreign&amp;rdquo;.</description></item></channel></rss>